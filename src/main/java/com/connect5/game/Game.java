package com.connect5.game;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import java.util.List;
import java.util.Map;

@DynamoDBTable(tableName = "Game")
public class Game {

    private String gameId;
    private int boardHeight;
    private int boardWidth;
    private Map<String, List<String>> grid;
    private Map<String, String> players;
    private boolean free;
    private String turnToken;
    private boolean gameOver;

    public Game() {
        // Default constructor is required by AWS DynamoDB SDK
    }

    public Game(int boardHeight, int boardWidth, Map<String, List<String>> grid, Map<String, String> player, String turnToken) {
        this.boardHeight = boardHeight;
        this.boardWidth = boardWidth;
        this.grid = grid;
        this.players = player;
        this.free = true;
        this.turnToken = turnToken;
        this.gameOver = false;
    }

    public Map<String, List<String>> addDisc (int column, String name) {
        String disc = this.getPlayerDisc(name);
        for (int i = boardWidth - 1; i >= 0; i--) {
            List<String> row = this.grid.get(String.valueOf(i));
            if (row.get(column).equals("*")) {
                row.set(column, disc);
                this.grid.put(String.valueOf(i), row);
                return this.grid;
            }
        }
        return this.grid;
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return gameId;
    }

    public void setId(String id) {
        this.gameId = id;
    }

    @DynamoDBAttribute
    public int getBoardHeight() {
        return boardHeight;
    }

    public void setBoardHeight(int boardHeight) {
        this.boardHeight = boardHeight;
    }

    @DynamoDBAttribute
    public int getBoardWidth() {
        return boardWidth;
    }

    public void setBoardWidth(int boardWidth) {
        this.boardWidth = boardWidth;
    }

    @DynamoDBAttribute
    public Map<String, List<String>> getGrid() {
        return grid;
    }

    public void setGrid(Map<String, List<String>> grid) {
        this.grid = grid;
    }

    @DynamoDBAttribute
    public Map<String, String> getPlayers() {
        return players;
    }

    public void setPlayers(Map<String, String> players) {
        this.players = players;
    }

    public void addPlayer(String name, String disc) {
        this.players.put(name, disc);
    }

    @DynamoDBAttribute
    public boolean isFree() {
        return free;
    }

    public void setFree(boolean free) {
        this.free = free;
    }

    @DynamoDBAttribute
    public String getTurnToken() {
        return turnToken;
    }

    public void setTurnToken(String turnToken) {
        this.turnToken = turnToken;
    }

    public String getPlayerDisc(String name) {
        return this.players.get(name);
    }

    public boolean isGameOver() {
        return gameOver;
    }

    public void setGameOver(boolean gameOver) {
        this.gameOver = gameOver;
    }
}